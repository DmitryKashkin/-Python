def len_str(string0=''):
    print(len(string0))
    j = 0
    for i in string0:
        j += 1
    print(j)

def new_str(str0 = ''):
    if len(str0) < 2:
        return ''
    return str0[0:2] + str0[-2:]

def replace_str(str0='', sym=''):
    return str0.replace(sym, '$')

def revers_str(str0=''):
    # str0 = list(str0)
    # str0.reverse()
    # return ''.join(str0)
    return str0[::-1]

def count(str0=''):
    key = set(str0)
    val = [str0.count(c) for c in key]
    return dict(zip(key, val))

def split_str(str0=''):
    # str1 = ''.join([])
    return str0[::2], str0[1::2]

def del_str(str0='', str1=''):
    return str0.replace(str1, '')

def upper_lower(str0=''):
    return str0.upper(), str0.lower()

def index_str(str0=''):
    return dict(zip(str0, range(len(str0))))

def is_str(str0='', str1 = ''):
    return str1 in str0

def symbol_in_str(str0=''):
    key = set(str0)
    val = [str0.count(c) for c in key]
    return dict(zip(key, val))



str0 = 'Выведите'
str1 = 'еди'
print(is_str(str0, str1))





"""
1. Выведите все символы из строки
«Данная часть была посвящена больше синтаксису Python и вопросам документации кода»,
значения индексов которых делятся на 2.

2. Выведите все символы из строки
«Данная часть была посвящена больше синтаксису Python и вопросам документации кода»,
значения индексов которых без остатка делятся на 3, но не делятся на 4.

3. Выведите все символы из строки
(Данная часть была посвящена больше синтаксису Python и вопросам документации кода»,
значения индексов которых при делении на 6 дают остаток 2, 4, и 5.

4. Выведите числа из диапазона от 1 до 10, используя цикл for и while.

5. Выведите числа из диапазона от -20 до 20 с шагом 3, используя цикл for и while.

6. Посчитайте количество вхождений элемента со значением «3» в следующем списке:
[3,0,1,3,0,4,3,3,4,56,6,1,3], используя цикл for, while и метод count.

7. Сформируйте список из элементов строки «список доступных атрибутов»,
используя механизм списковых включений и цикл for.
8.
Сформируйте единичную матрицу N х N, используя механизм списковых включений.
9.
Напишите программу, выводящую элементы списка [3 01304334 56 6 1 3] в обратной последовательности.
10.
Напишите программу, которая выводит числе в диапазоне от 1 до 9, кроме 5 и 7.
11.
Напишите программу, выводящую сумму элементов списка [3 01 304334 56 61 3], используя цикл for, while и метод sum.
12.
Напишите программу, выводящую сумму элементов списка [3 01304334 56 613], значения индексов которых делятся на без остатка на 3, используя цикл for и while.
13.
Сформируйте список, значения элементов которого находятся в диапазоне от 23 до 35.
92
14.
Сформируйте список, значения элементов которого находятся в диапазоне от 3 до 15 с шагом 4.
15.
Сформируйте список, значения элементов которого находятся в диапазоне от 3 до 25 и без остатка делятся на 3.
16.
Сформируйте словарь из двух списков [3 01 3 0 4 3 3 4 56 6 1 3] и [2, 4,7,26,33], используя встроенную функцию zip. Выведите словарь в консоль и объясните, почему он получился такого вида.
17.
Выведите различными способами в консоль элементы списка [3 01304334 56 6 1 3] с их индексами.
18.
Напишите программу, которая считывает целое число (месяц), после чего выводит сезон к которому этот месяц относится.
19.
Напишите программу, выводящую среднее из трех значений.
20.
Напишите программу, выводящую таблицу умножения для задаваемого пользователем числа от 1 до 9 (включительно).
"""


def even_symbol(string1):  # 1
    return [s for index, s in enumerate(string1) if index % 2 == 0]


def even_symbol_3_4(string1):  # 2
    return [s for index, s in enumerate(string1) if index % 3 == 0 and index % 4 != 0]


def even_symbol_6_2_4_5(string1):  # 3
    return [(s, index) for index, s in enumerate(string1) if (index % 6) in [2, 4, 5]]


def nums_1_10():  # 5
    for i in range(-20, 21, 3):
        print(i, end=' ')
    print('')
    i = -20
    while i <= 20:
        print(i, end=' ')
        i += 3


def count_3(): #6
    count1 = 0
    for i in [3, 0, 1, 3, 0, 4, 3, 3, 4, 56, 6, 1, 3]:
        if i == 3:
            count1 += 1
    list0 = [3, 0, 1, 3, 0, 4, 3, 3, 4, 56, 6, 1, 3]
    count2 = i = 0
    while i < len(list0):
        if list0[i] == 3:
            count2 += 1
        i += 1
    count3 = list0.count(3)
    return count1, count2, count3




# string1 = 'Данная часть была посвящена больше синтаксису Python и вопросам документации кода'
# print(count_3())
